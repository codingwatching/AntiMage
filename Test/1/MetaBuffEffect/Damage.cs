//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Cfg.MetaBuffEffect
{ 

/// <summary>
/// 伤害效果
/// </summary>
public sealed partial class Damage :  Base 
{
    public Damage(JSONNode _json)  : base(_json) 
    {
        { if(!_json["type"].IsNumber) { throw new SerializationException(); }  Type = (DamageType)_json["type"].AsInt; }
        { if(!_json["numeric_formula"].IsString) { throw new SerializationException(); }  NumericFormula = _json["numeric_formula"]; }
        PostInit();
    }

    public Damage(DamageType type, string numeric_formula )  : base() 
    {
        this.Type = type;
        this.NumericFormula = numeric_formula;
        PostInit();
    }

    public static Damage DeserializeDamage(JSONNode _json)
    {
        return new MetaBuffEffect.Damage(_json);
    }

    /// <summary>
    /// 伤害类型枚举
    /// </summary>
    public DamageType Type { get; private set; }
    /// <summary>
    /// 数值公式
    /// </summary>
    public string NumericFormula { get; private set; }

    public const int __ID__ = -96890540;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Type:" + Type + ","
        + "NumericFormula:" + NumericFormula + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
