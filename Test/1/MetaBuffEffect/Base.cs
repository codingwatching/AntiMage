//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace Cfg.MetaBuffEffect
{ 

/// <summary>
/// Buff效果基类
/// </summary>
public abstract partial class Base :  Bright.Config.BeanBase 
{
    public Base(JSONNode _json) 
    {
        { if(!_json["temp"].IsNumber) { throw new SerializationException(); }  Temp = _json["temp"]; }
        PostInit();
    }

    public Base(int temp ) 
    {
        this.Temp = temp;
        PostInit();
    }

    public static Base DeserializeBase(JSONNode _json)
    {
        string type = _json["$type"];
        switch (type)
        {
            case "Damage": return new MetaBuffEffect.Damage(_json);
            case "AttachState": return new MetaBuffEffect.AttachState(_json);
            case "DetachState": return new MetaBuffEffect.DetachState(_json);
            default: throw new SerializationException();
        }
    }

    public int Temp { get; private set; }


    public virtual void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public virtual void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Temp:" + Temp + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
